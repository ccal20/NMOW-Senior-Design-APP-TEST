{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import axios from\"axios\";import StockControls from\"./StockControls\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IngredientList=_ref=>{let{searchQuery}=_ref;const[ingredients,setIngredients]=useState([]);const[filteredIngredients,setFilteredIngredients]=useState([]);const[selectedCategory,setSelectedCategory]=useState(\"All Categories\");const[selectedStorage,setSelectedStorage]=useState(\"All Storage\");const fetchIngredients=async()=>{try{const response=await axios.get(\"http://127.0.0.1:8000/ingredients\");if(response.data.ingredients&&Array.isArray(response.data.ingredients)){setIngredients(response.data.ingredients);}else{console.error(\"Invalid data format:\",response.data);setIngredients([]);}}catch(error){console.error(\"Error fetching ingredients:\",error);setIngredients([]);}};useEffect(()=>{fetchIngredients();// Fetch data on mount\n},[]);useEffect(()=>{let filtered=[...ingredients];if(selectedCategory!==\"All Categories\"){filtered=filtered.filter(ing=>ing.item_category===selectedCategory);}if(selectedStorage!==\"All Storage\"){filtered=filtered.filter(ing=>ing.storage_location===selectedStorage);}if(searchQuery){filtered=filtered.filter(ing=>ing.ingredient_name.toLowerCase().includes(searchQuery.toLowerCase()));}setFilteredIngredients(filtered);},[searchQuery,selectedCategory,selectedStorage,ingredients]);// ✅ Calculate total servings (Rounded to integer)\nconst totalServings=Math.round(filteredIngredients.reduce((sum,ing)=>sum+ing.num_containers*(ing.units_per_container||1),0));return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-container\",style:{display:\"flex\",alignItems:\"center\",gap:\"20px\"},children:[/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setSelectedCategory(e.target.value),className:\"filter-dropdown\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"All Categories\"}),[...new Set(ingredients.map(ing=>ing.item_category))].map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setSelectedStorage(e.target.value),className:\"filter-dropdown\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"All Storage\"}),[...new Set(ingredients.map(ing=>ing.storage_location))].map(storage=>/*#__PURE__*/_jsx(\"option\",{value:storage,children:storage},storage))]}),/*#__PURE__*/_jsxs(\"span\",{style:{fontWeight:\"bold\",fontSize:\"15px\",marginRight:\"auto\",alignSelf:\"center\"// Vertically center\n},children:[\"Total Servings: \",totalServings]})]}),filteredIngredients.length>0?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Brand\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Container\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Storage Location\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Servings\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Edit\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredIngredients.map(ingredient=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:ingredient.ingredient_name}),/*#__PURE__*/_jsx(\"td\",{children:ingredient.brand}),/*#__PURE__*/_jsx(\"td\",{children:ingredient.num_containers}),/*#__PURE__*/_jsx(\"td\",{children:ingredient.container_type}),/*#__PURE__*/_jsx(\"td\",{children:ingredient.storage_location}),/*#__PURE__*/_jsx(\"td\",{children:Math.round(ingredient.num_containers*(ingredient.units_per_container||1))}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(StockControls,{ingredient:ingredient,setIngredients:setIngredients})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:`/ingredient/${ingredient.barcode}`,children:\"Edit\"})})]},ingredient.barcode))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No ingredients found.\"})]});};export default IngredientList;","map":{"version":3,"names":["React","useState","useEffect","Link","axios","StockControls","jsx","_jsx","jsxs","_jsxs","IngredientList","_ref","searchQuery","ingredients","setIngredients","filteredIngredients","setFilteredIngredients","selectedCategory","setSelectedCategory","selectedStorage","setSelectedStorage","fetchIngredients","response","get","data","Array","isArray","console","error","filtered","filter","ing","item_category","storage_location","ingredient_name","toLowerCase","includes","totalServings","Math","round","reduce","sum","num_containers","units_per_container","children","className","style","display","alignItems","gap","onChange","e","target","value","Set","map","category","storage","fontWeight","fontSize","marginRight","alignSelf","length","ingredient","brand","container_type","to","barcode"],"sources":["C:/Users/charl/OneDrive/Documents/GitHub/NMOW-Senior-Design-APP-TEST/inventory-dashboard/src/components/IngredientList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport StockControls from \"./StockControls\";\r\n\r\nconst IngredientList = ({ searchQuery }) => {\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All Categories\");\r\n  const [selectedStorage, setSelectedStorage] = useState(\"All Storage\");\r\n\r\n  const fetchIngredients = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://127.0.0.1:8000/ingredients\");\r\n      if (response.data.ingredients && Array.isArray(response.data.ingredients)) {\r\n        setIngredients(response.data.ingredients);\r\n      } else {\r\n        console.error(\"Invalid data format:\", response.data);\r\n        setIngredients([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching ingredients:\", error);\r\n      setIngredients([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchIngredients(); // Fetch data on mount\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = [...ingredients];\r\n\r\n    if (selectedCategory !== \"All Categories\") {\r\n      filtered = filtered.filter(ing => ing.item_category === selectedCategory);\r\n    }\r\n\r\n    if (selectedStorage !== \"All Storage\") {\r\n      filtered = filtered.filter(ing => ing.storage_location === selectedStorage);\r\n    }\r\n\r\n    if (searchQuery) {\r\n      filtered = filtered.filter(ing =>\r\n        ing.ingredient_name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setFilteredIngredients(filtered);\r\n  }, [searchQuery, selectedCategory, selectedStorage, ingredients]);\r\n\r\n  // ✅ Calculate total servings (Rounded to integer)\r\n  const totalServings = Math.round(\r\n    filteredIngredients.reduce((sum, ing) => sum + ing.num_containers * (ing.units_per_container || 1), 0)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"filter-container\" style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}>\r\n        <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"filter-dropdown\">\r\n          <option>All Categories</option>\r\n          {[...new Set(ingredients.map(ing => ing.item_category))].map(category => (\r\n            <option key={category} value={category}>{category}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select onChange={(e) => setSelectedStorage(e.target.value)} className=\"filter-dropdown\">\r\n          <option>All Storage</option>\r\n          {[...new Set(ingredients.map(ing => ing.storage_location))].map(storage => (\r\n            <option key={storage} value={storage}>{storage}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* ✅ Vertically Centered Total Servings */}\r\n        <span style={{\r\n          fontWeight: \"bold\",\r\n          fontSize: \"15px\",\r\n          marginRight: \"auto\", \r\n          alignSelf: \"center\" // Vertically center\r\n        }}>\r\n          Total Servings: {totalServings}\r\n        </span>\r\n      </div>\r\n\r\n      {filteredIngredients.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Brand</th>\r\n              <th>Quantity</th>\r\n              <th>Container</th>\r\n              <th>Storage Location</th>\r\n              <th>Servings</th>\r\n              <th>Actions</th>\r\n              <th>Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredIngredients.map((ingredient) => (\r\n              <tr key={ingredient.barcode}>\r\n                <td>{ingredient.ingredient_name}</td>\r\n                <td>{ingredient.brand}</td>\r\n                <td>{ingredient.num_containers}</td>\r\n                <td>{ingredient.container_type}</td>\r\n                <td>{ingredient.storage_location}</td>\r\n                <td>{Math.round(ingredient.num_containers * (ingredient.units_per_container || 1))}</td>\r\n                <td>\r\n                  <StockControls ingredient={ingredient} setIngredients={setIngredients} />\r\n                </td>\r\n                <td>\r\n                  <Link to={`/ingredient/${ingredient.barcode}`}>Edit</Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No ingredients found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}